{"version":3,"sources":["components/Header.js","components/SearchByCity.js","components/Restaurant.js","components/PageButtons.js","components/Restaurants.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","SearchByCity","props","onSubmit","e","preventDefault","onKeyPress","key","handleClick","target","name","forhtml","type","value","cityName","placeholder","onChange","handleChange","id","onClick","Restaurant","price","i","restaurant","address","city","PageButtons","currentPage","totalPages","Restaurants","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","restaurantsData","totalRestaurants","showResults","isLoading","bind","assertThisInitialized","handlePageChange","page","_this2","setState","fetch","then","response","json","restaurants","parseInt","total_entries","per_page","err","console","error","message","event","newCurrentPage","fetchData","window","scrollTo","_event$target","defineProperty","components_SearchByCity","map","components_Restaurant","components_PageButtons","React","Component","Footer","App","components_Header","components_Restaurants","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f191898a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n  return (\n    <div className='text-center header d-flex align-items-center justify-content-center'>\n      <div>\n        <h1>Restaurants In Your City</h1>\n        <h4>Developer Coding Test (FE)</h4>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction SearchByCity(props) {\n  return (\n    <form\n      className='searchByCity'\n      onSubmit={e => e.preventDefault()}\n      onKeyPress={e =>\n        e.key === 'Enter' &&\n        props.handleClick({ target: { name: 'searchRestaurants' } })\n      }\n    >\n      <div className='text-center form-group row'>\n        <div className='col-sm-3'>\n          <label className='my-auto' forhtml='cityName'>\n            Enter City's name:\n          </label>\n        </div>\n        <div className='col-sm-6'>\n          <input\n            className='cityNameInput form-control w-100'\n            type='text'\n            name='cityName'\n            value={props.cityName}\n            placeholder=\"Enter city's name here...\"\n            onChange={props.handleChange}\n          />\n        </div>\n        <div className='col-sm-3'>\n          <button\n            id='searchRestaurants'\n            className='searchRestButton'\n            type='button'\n            name='searchRestaurants'\n            onClick={props.handleClick}\n          >\n            Search Restaurants\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SearchByCity\n","import React from 'react'\n\nfunction Restaurant(props) {\n  let price = ''\n  for (let i = 0; i < props.restaurant.price; i++) {\n    price += '$'\n  }\n\n  return (\n    <div className='restContainer container-fluid'>\n      <div className='restName d-flex align-items-center justify-content-center'>\n        <h5>{props.restaurant.name}</h5>\n      </div>\n      <div>\n        <p>Address: {props.restaurant.address}</p>\n        <p>City: {props.restaurant.city}</p>\n        <p>Price: {price}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Restaurant\n","import React from 'react'\n\nfunction PageButtons(props) {\n  return (\n    <div className='pageButtons d-flex justify-content-between'>\n      <div>\n        {props.currentPage !== 1 && (\n          <button type='button' name='previousPage' onClick={props.handleClick}>\n            Previous\n          </button>\n        )}\n      </div>\n      <div className='text-center'>\n        <p>\n          Page {props.currentPage}/{props.totalPages}\n        </p>\n      </div>\n      <div>\n        {props.currentPage !== props.totalPages && (\n          <button type='button' name='nextPage' onClick={props.handleClick}>\n            Next\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PageButtons\n","import React from 'react'\nimport SearchByCity from './SearchByCity'\nimport Restaurant from './Restaurant'\nimport PageButtons from './PageButtons'\n\nclass Restaurants extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      cityName: '',\n      restaurantsData: [],\n      currentPage: 1,\n      totalRestaurants: 0,\n      totalPages: 0,\n      showResults: false,\n      isLoading: false\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handlePageChange = this.handlePageChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  // method to fetch the data from the API\n  fetchData(page) {\n    try {\n      // @todo Create validations\n      this.setState({\n        isLoading: true\n      })\n      fetch(\n        'https://opentable.herokuapp.com/api/restaurants?city=' +\n          this.state.cityName +\n          '&page=' +\n          page\n      )\n        .then(response => response.json())\n        .then(response => {\n          const { restaurants } = response\n          const totalPages =\n            parseInt(response.total_entries / response.per_page) + 1\n          this.setState({\n            restaurantsData: restaurants,\n            totalRestaurants: response.total_entries,\n            totalPages: totalPages,\n            isLoading: false\n          })\n        })\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  handleClick(event) {\n    let newCurrentPage = 0\n    // according to which button clicked, the currentPage is updated in a different way\n    switch (event.target.name) {\n      case 'searchRestaurants':\n        newCurrentPage = 1\n        break\n      case 'previousPage':\n        newCurrentPage = this.state.currentPage - 1\n        break\n      case 'nextPage':\n        newCurrentPage = this.state.currentPage + 1\n        break\n      default:\n        newCurrentPage = 0\n    }\n\n    // Results are displayed\n    this.setState({\n      currentPage: newCurrentPage,\n      showResults: true\n    })\n    this.fetchData(newCurrentPage)\n    window.scrollTo(0, 0)\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handlePageChange(event) {\n    const newCurrentPage = this.state.currentPage + 1\n    this.setState({\n      currentPage: newCurrentPage\n    })\n    this.fetchData(newCurrentPage)\n  }\n\n  render() {\n    return (\n      <div className='container restaurants text-center'>\n        <SearchByCity\n          handleClick={this.handleClick}\n          handleChange={this.handleChange}\n          cityName={this.state.cityName}\n        />\n        {/* showResults is true once the Search Restaurants button is clicked */}\n        {this.state.showResults &&\n          (this.state.isLoading ? (\n            <div>Loading Results</div>\n          ) : (\n            <div className='results d-flex flex-wrap align-items-center justify-content-center'>\n              {/* if there are more than 0 results, the results will be displayed */}\n              {this.state.totalRestaurants > 0 ? (\n                this.state.restaurantsData.map(restaurant => (\n                  <Restaurant\n                    className=''\n                    key={restaurant.id}\n                    restaurant={restaurant}\n                  />\n                ))\n              ) : (\n                // If 0 results, the following message will be displayed\n                <div>No restaurants found</div>\n              )}\n            </div>\n          ))}\n        {this.state.totalRestaurants > 25 && (\n          <PageButtons\n            handleClick={this.handleClick}\n            currentPage={this.state.currentPage}\n            totalPages={this.state.totalPages}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Restaurants\n","import React from 'react'\n\nfunction Footer() {\n  return (\n    <div className='footer d-flex align-items-center justify-content-center'>\n      <p>Designed by Felipe Belgine.</p>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './components/Header'\nimport Restaurants from './components/Restaurants'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Header />\n      <Restaurants />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}